apiVersion: v1
kind: Service
metadata:
  name: mlflow-server-svc-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    app: mlflow-server
  ports:
    -
      name: mlflow-server
      port: 5000
      nodePort: 32050
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-server-svc
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: port5000
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: mlflow-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
  name: mlflow-server-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /mlflow-server
        pathType: ImplementationSpecific
        backend:
          service:
            name: mlflow-server-svc
            port:
              number: 5000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-server-config
  labels:
    app : mlflow-server

data:
  basic_auth.ini: |-
    [mlflow]
    default_permission = NO_PERMISSIONS
    database_uri = postgresql://mlflow:mlflow@apache-airflow-postgresql.default.svc.cluster.local:5432/mlflow-auth
    admin_username = admin
    admin_password = admin

---
apiVersion: v1
kind: Pod
metadata:
  name: mlflow-server
  labels:
    app: mlflow-server
spec:
  restartPolicy: Never
  terminationGracePeriodSeconds: 5
  containers:
    - name: mlflow-server
      image: mlstudio/mlflow2.13.2:latest
      imagePullPolicy: IfNotPresent
      workingDir: /opt/mlflow
      env:
        - name: APP_HOME
          value: "/opt/mlflow"
        - name: APP_NAME
          value: "mlflow-server"
        - name: MLFLOW_REGISTRY_URI
          value : 'postgresql://mlflow:mlflow@apache-airflow-postgresql.default.svc.cluster.local:5432/mlflow'
        - name: MLFLOW_TRACKING_URI
          value : 'postgresql://mlflow:mlflow@apache-airflow-postgresql.default.svc.cluster.local:5432/mlflow'
        - name: MLFLOW_AUTH_CONFIG_PATH
          value: "/opt/mlflow/.mlflow/basic_auth.ini"
      command:
        ["/bin/sh"]
      args: ["-c", "mkdir -p ~/.ssh && ssh-keyscan -t ed25519 sftp-server.default.svc.cluster.local >> ~/.ssh/known_hosts && mlflow server --host=0.0.0.0 --app-name=basic-auth --workers=2 --backend-store-uri=postgresql://mlflow:mlflow@apache-airflow-postgresql.default.svc.cluster.local:5432/mlflow --serve-artifacts"]
      # command:
      #   - mlflow
      # args:
      #   - server
      #   - --host=0.0.0.0
      #   - --app-name=basic-auth
      #   - --workers=2
      #   - --backend-store-uri=postgresql://mlflow:mlflow@apache-airflow-postgresql.default.svc.cluster.local:5432/mlflow
      #   - --serve-artifacts
        # - --default-artifact-root=file:/opt/mlflow/mlruns
        # - --default-artifact-root=sftp://mlflow-artifacts:mlflow-artifacts@sftp-server.default.svc.cluster.local:22

      ports:
        - name: mlflow-server
          containerPort: 5000
      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "1Gi"
          cpu: "1"
      volumeMounts:
        - name: mlflow-server-config
          mountPath: "/opt/mlflow/.mlflow/basic_auth.ini"
          subPath: basic_auth.ini
          readOnly: false
        - name: host-mount
          mountPath: "/opt/mlflow/mlruns"
          subPath: mlflow/mlruns
          readOnly: false
  # initContainers:
  #   - name: init-mlflow-server
  #     image: mlstudio/mlflow2.13.2:latest
  #     imagePullPolicy: IfNotPresent
  #     command: ['sh', '-c', 'mkdir -p ~/.ssh;ssh-keyscan -t ed25519 sftp-server.default.svc.cluster.local >> ~/.ssh/known_hosts']
  volumes:
    - name: mlflow-server-config
      configMap:
        name: mlflow-server-config
    - name: host-mount
      persistentVolumeClaim:
        claimName: pvc-host
