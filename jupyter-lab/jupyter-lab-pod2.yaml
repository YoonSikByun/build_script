apiVersion: v1
kind: Service
metadata:
  name: jupyter-lab-svc-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    app: jupyter-lab
  ports:
    -
      name: jupyter-lab
      port: 8888
      nodePort: 30110
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-lab-svc
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: port8888
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: jupyter-lab
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
  name: jupyter-lab-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /jupyter-lab
        pathType: ImplementationSpecific
        backend:
          service:
            name: jupyter-lab-svc
            port:
              number: 8888
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyter-lab-config
  labels:
    app : jupyter-lab

data:

  jupyter_lab_config.py: |-
    import os

    c=get_config()

    c.ServerApp.ip = "0.0.0.0"
    c.ServerApp.port = 8888
    c.ServerApp.password_required = False
    c.ContentsManager.allow_hidden = False
    c.ServerApp.terminado_settings = {"shell_command": ["/bin/bash"]}
    c.ServerApp.root_dir = f'{os.getenv("APP_HOME")}/source'
    c.ServerApp.token = ""
    c.ServerApp.base_url = f'/{os.getenv("APP_NAME")}/'

    # shutdown the server after no activity for an hour
    c.ServerApp.shutdown_no_activity_timeout = 60 * 60
    # shutdown kernels after no activity for 20 minutes
    c.MappingKernelManager.cull_idle_timeout = 20 * 60
    # check for idle kernels every two minutes
    c.MappingKernelManager.cull_interval = 2 * 60

    if os.getenv('MEMORY_LIMIT'):
      c.ResourceUseDisplay.mem_limit = int(os.getenv('MEMORY_LIMIT')) * 1024*1024*1024

    if os.getenv('CPU_LIMIT'):
      c.ResourceUseDisplay.cpu_limit = int(os.getenv('CPU_LIMIT'))
      c.ResourceUseDisplay.track_cpu_percent = True

---
apiVersion: v1
kind: Pod
metadata:
  name: jupyter-lab
  labels:
    app: jupyter-lab
spec:
  restartPolicy: Never
  terminationGracePeriodSeconds: 5
  containers:
    - name: jupyter-lab
      image: mlstudio/jupyterlab4.1.8:latest
      # image: mlstudio/jupyterlab-extenstions4.1.8:latest
      imagePullPolicy: IfNotPresent
      # workingDir: /home/mlstudio
      workingDir: /opt/mlstudio/source
      env:
        - name: APP_HOME
          value: "/opt/mlstudio"
        - name: APP_NAME
          value: "jupyter-lab"
        - name: INPUT_PATH
          value: "/opt/mlstudio/input"
        - name: OUTPUT_PATH
          value: "/opt/mlstudio/output"
        - name: MEMORY_LIMI
          value: "1"
        - name: CPU_LIMIT
          value: "1"
      args:
        - bash
        - -c
        # - jupyter lab --port=8888 --no-browser --ip=0.0.0.0 --allow-root --LabApp.token=''
        - jupyter lab --no-browser --ip=0.0.0.0 --allow-root
      ports:
        - name: jupyter-lab
          containerPort: 8888
      resources:
        requests:
          memory: "0.5Gi"
          cpu: "1"
        limits:
          memory: "0.5Gi"
          cpu: "1"
      volumeMounts:
        - name: jupyter-lab-config
          mountPath: "/home/mlstudio/.jupyter/jupyter_lab_config.py"
          subPath: jupyter_lab_config.py
          readOnly: false
        - name: config
          mountPath: /opt/mlstudio/config/mlstudio-config.json
          subPath: mlstudio-config.json
          readOnly: true
        - name: config
          mountPath: /opt/mlstudio/config/mlstudio-config2.json
          subPath: mlstudio-config2.json
          readOnly: true
        - name: host-mount
          mountPath: "/opt/mlstudio/piplines"
          subPath: mlstudio/pipelines
          readOnly: true
        - name: host-mount
          mountPath: "/opt/mlstudio/input"
          subPath: mlstudio/pipelines/pipelienid/nodeid/input
          readOnly: false
        - name: host-mount
          mountPath: "/opt/mlstudio/output"
          subPath: mlstudio/pipelines/pipelienid/nodeid/output
          readOnly: false
        - name: host-mount
          mountPath: "/opt/mlstudio/source"
          subPath: mlstudio/pipelines/pipelienid/nodeid/source
          readOnly: false
        - name: host-mount
          mountPath: "/opt/mlstudio/interface"
          subPath: mlstudio/interface
          readOnly: false
  volumes:
    - name: jupyter-lab-config
      configMap:
        name: jupyter-lab-config
    - name: config
      configMap:
        name: mlstudio-config
    - name: host-mount
      persistentVolumeClaim:
        claimName: pvc-host
